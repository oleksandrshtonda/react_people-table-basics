{"version":3,"sources":["components/NavBar/NavBar.tsx","components/HomePage/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PeoplePage/PersonRow/PersonRow.tsx","components/PeoplePage/PeoplePage.tsx","components/PageNotFound/PageNotFound.tsx","App.tsx","index.tsx"],"names":["NavBar","className","role","isActive","classNames","to","HomePage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonRow","person","userId","name","sex","born","died","motherName","fatherName","mother","father","slug","getParentMarkup","parent","parentName","href","PeoplePage","useState","people","setPeople","isLoading","setIsLoading","loadingError","setLoadingError","useParams","useEffect","data","innerPeople","map","parents","find","Object","assign","catch","finally","length","PageNotFound","App","index","path","element","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a8998041.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={\n              ({ isActive }) => classNames(\n                'navbar-item',\n                {\n                  'has-background-grey-lighter': isActive,\n                },\n              )\n            }\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={\n              ({ isActive }) => classNames(\n                'navbar-item',\n                {\n                  'has-background-grey-lighter': isActive,\n                },\n              )\n            }\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\nconst API_URL\n= 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Person } from '../../../types';\n\ninterface Props {\n  person: Person;\n  userId: string;\n}\n\nexport const PersonRow: React.FC<Props> = ({ person, userId }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  const getParentMarkup = (\n    parent: Person | undefined,\n    parentName: Person['name'] | null,\n  ) => {\n    if (!parent && !parentName) {\n      return '-';\n    }\n\n    if (!parent && parentName) {\n      return <span>{parentName}</span>;\n    }\n\n    return (\n      <a\n        className={classNames({\n          'has-text-danger': parent?.sex === 'f',\n        })}\n        href={`#/people/${parent?.slug}`}\n      >\n        {parentName}\n      </a>\n    );\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': userId === slug,\n      })}\n    >\n      <td>\n        <a\n          href={`#/people/${slug}`}\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n        >\n          {name}\n        </a>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {getParentMarkup(mother, motherName)}\n      </td>\n\n      <td>\n        {getParentMarkup(father, fatherName)}\n      </td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nimport { Loader } from '../Loader';\nimport { PersonRow } from './PersonRow';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[] | []>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [loadingError, setLoadingError] = useState<boolean>(false);\n  const { userId } = useParams();\n\n  function addParents(innerPeople: Person[]) {\n    return innerPeople.map(person => {\n      const motherOfPerson = innerPeople.find(mother => {\n        return mother.name === person.motherName;\n      });\n\n      const fatherOfPerson = innerPeople.find(father => {\n        return father.name === person.fatherName;\n      });\n\n      const parents = { mother: motherOfPerson, father: fatherOfPerson };\n\n      return Object.assign(person, parents);\n    });\n  }\n\n  useEffect(() => {\n    getPeople()\n      .then(data => setPeople(addParents(data)))\n      .catch(() => setLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {loadingError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && !loadingError && people.length > 0 && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              {!isLoading && (\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Sex</th>\n                    <th>Born</th>\n                    <th>Died</th>\n                    <th>Mother</th>\n                    <th>Father</th>\n                  </tr>\n                </thead>\n              )}\n\n              <tbody>\n                {people.map(\n                  person => (\n                    <PersonRow\n                      key={person.slug}\n                      person={person}\n                      userId={userId as string}\n                    />\n                  ),\n                )}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const PageNotFound: React.FC = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\n\nimport { NavBar } from './components/NavBar';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { PageNotFound } from './components/PageNotFound';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route index path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n            <Route path=\"/people\">\n              <Route path=\":userId?\" element={<PeoplePage />} />\n            </Route>\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}